Hi! It is my first project with git.

Инициализация локального репозитория из git bush:

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1
$ git init
Initialized empty Git repository in D:/git-projects/project1/.git/

Создание имени владельца репозитория:

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)
$ git config --global user.name "Eduard"

Создание e-mile владельца репозитория:

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)
$ git config --global user.email eds832@gmail.com

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Просмотр всех настроек репозитория:

$ git config --list
core.symlinks=false
core.autocrlf=true
core.fscache=true
color.diff=auto
color.status=auto
color.branch=auto
color.interactive=true
help.format=html
rebase.autosquash=true
http.sslcainfo=C:/Program Files (x86)/Git/mingw64/ssl/certs/ca-bundle.crt
http.sslbackend=openssl
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
credential.helper=manager
user.name=Eduard
user.email=eds832@gmail.com
gui.recentrepo=C:/Users/Eduard_Sardyka/git/21m06
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true

Переход в папку docs:

$ cd docs

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1/docs (master)

Просмотр содержимого папки docs:

$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        ../.gitignore
        ../FirstText.txt
        ./

nothing added to commit but untracked files present (use "git add" to track)

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)
$

Просмотр не включенных файлов в гит-проект:

$ git status --untracked-files=all
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        ../.gitignore
        ../FirstText.txt
        DocToNotIgnore.log
        DocToNotIgnore1.log

nothing added to commit but untracked files present (use "git add" to track)

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1/docs (master)


Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1/docs (master)
$
Добавление файлов в git-project:
Смотрим до добавления:
Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .gitignore
        FirstText.txt
        docs/

nothing added to commit but untracked files present (use "git add" to track)

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Добавляем все файлы:

$ git add .

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Смотрим после добавления:

$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   .gitignore
        new file:   FirstText.txt
        new file:   docs/DocToNotIgnore.log
        new file:   docs/DocToNotIgnore1.log


Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)


Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)
$

Удаление из-под присмотра Гита файла:

$ git rm --cached docs/DocToNotIgnore1.log
rm 'docs/DocToNotIgnore1.log'

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Смотрим новый гит статус(содержимое проекта для Гита):

$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   .gitignore
        new file:   FirstText.txt
        new file:   docs/DocToNotIgnore.log

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   FirstText.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        docs/DocToNotIgnore1.log


Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Коммитим наш репозиторий (-а - создает индексы, -m - создает комментарий):

$ git commit -a -m"This is initial commit"
[master (root-commit) 52ae322] This is initial commit
 3 files changed, 188 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 FirstText.txt
 create mode 100644 docs/DocToNotIgnore.log

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Просмотрим:

$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        docs/DocToNotIgnore1.log

nothing added to commit but untracked files present (use "git add" to track)

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

После сохранения изменений в файле FirstText.txt это видно в гит статусе:

$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   FirstText.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        docs/DocToNotIgnore1.log

no changes added to commit (use "git add" and/or "git commit -a")

Добавляем новый файл:

$ git add docs/DocToNotIgnore1.log

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Смотрим статус гита:

$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   docs/DocToNotIgnore1.log

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   FirstText.txt


Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Видим, что добавился долько один файл - он был проиндексирован раннее. 
Чтобы добавить другой - его необходимо также проиндексировать.

Добавление все файлы:

$ git add .

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   FirstText.txt
        new file:   docs/DocToNotIgnore1.log


Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Коммитим:

$ git commit -m"I commit my last modification"
[master 6ffb7b2] I commit my last modification
 2 files changed, 71 insertions(+), 1 deletion(-)
 create mode 100644 docs/DocToNotIgnore1.log
 
 После внесения изменений в файл FirstText.txt гит статус:
 
 $ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   FirstText.txt

no changes added to commit (use "git add" and/or "git commit -a")

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Пробуем откатиться до предыдущего состояния:

$ git checkout -- FirstText.txt

Eduard_Sardyka@EPBYMINW8126 MINGW64 /d/git-projects/project1 (master)

Просмотрим гит статус:

$ git status
On branch master
nothing to commit, working tree clean

Просмотр лога коммитов (если оно очень длинное то выход клавишей Q):

$ git log
commit ced9217e430a4f4a995cb840bd22d6f3c5133cbd (HEAD -> master)
Author: Eduard <eds832@gmail.com>
Date:   Mon Nov 20 15:48:28 2017 +0300

    I commit last changes

commit 42a9cb5a6c482e8838699e6c03da8ab7edb6816d
Author: Eduard <eds832@gmail.com>
Date:   Mon Nov 20 15:41:27 2017 +0300

    I commit my last changes

commit 6ffb7b2f3d5ade5bf8af7246bd7ef18fb1e15ae3
Author: Eduard <eds832@gmail.com>
Date:   Mon Nov 20 15:38:44 2017 +0300

    I commit my last modification

commit 52ae322a3a25b3ec81ffa7ab486c495fc8ccd389
Author: Eduard <eds832@gmail.com>
Date:   Mon Nov 20 15:11:09 2017 +0300

    This is initial commit

Просмотр помощи по команде лога (Откроется окно браузера с подсказками):

$ git help log

Просмотр более кратких логов (%h - краткий код коммита, %ar - время коммита, %s - текст коммита):

$ git log --pretty=format:"%h - %an, %ar : %s"
ced9217 - Eduard, 15 minutes ago : I commit last changes
42a9cb5 - Eduard, 22 minutes ago : I commit my last changes
6ffb7b2 - Eduard, 25 minutes ago : I commit my last modification
52ae322 - Eduard, 52 minutes ago : This is initial commit

Просмотр коммитов за последние 20мин:

$ git log --since=20minute
commit ced9217e430a4f4a995cb840bd22d6f3c5133cbd (HEAD -> master)
Author: Eduard <eds832@gmail.com>
Date:   Mon Nov 20 15:48:28 2017 +0300

    I commit last changes

Аналогично: --since=1hour, $ git log --since=2.weeks, $ git log --since=2week

Занесем несколько букв для проверки

Затем коммитим ($ git add .  $ git commit -m"Comment") 

Добавим еще пару букв

Затем коммитим ($ git add .  $ git commit -m"Comment") 

Просмотр изменеий в последних 2 коммитах:

$ git log -p -2
commit 6f093569086a7c8ed540293af5d8f681a5856ffc (HEAD -> master)
Author: Eduard <eds832@gmail.com>
Date:   Mon Nov 20 16:20:21 2017 +0300

    I commit last words

diff --git a/FirstText.txt b/FirstText.txt
index c22040d..0eb0d0c 100644
--- a/FirstText.txt
+++ b/FirstText.txt
@@ -346,6 +346,8 @@ Date:   Mon Nov 20 15:48:28 2017 +0300

 Занесем несколько букв для проверки

+Добавим еще пару букв
+




commit eed0323c32c9559a8eb27d6d5a132b037ffe3e7e
Author: Eduard <eds832@gmail.com>
Date:   Mon Nov 20 16:19:24 2017 +0300

    I commit some letters

diff --git a/FirstText.txt b/FirstText.txt
index da6b7de..c22040d 100644
--- a/FirstText.txt
+++ b/FirstText.txt
@@ -344,6 +344,8 @@ Date:   Mon Nov 20 15:48:28 2017 +0300

 Аналогично: --since=1hour, $ git log --since=2.weeks, $ git log --since=2week

+Занесем несколько букв для проверки
+

Добавим новый редактор для коммитов:
$ git config --global core.editor "'C:\\Program Files (x86)\\Notepad++\\notepad++.exe' -multiInst -notabbar -nosession -noPlugin"
А проще добавить в юзерс/юзер/.gitconfig :
[core] editor = 'C:\\Program Files (x86)\\Notepad++\\notepad++.exe' -multiInst -notabbar -nosession -noPlugin 
   
Внесем измения в этот документ и проверим как коммитится через Нотепад++, т.е. git commit без -m:

$ git commit(здесь после нажатия Enter открывается Notepad++ можно коментировать, сохранить и закрыть) 
[master d416887] My first commit from Notepad
 1 file changed, 47 insertions(+)

Создание новой ветки new_f и переход туда:

$ git checkout -b new_f
Switched to a new branch 'new_f'
M       FirstText.txt

Просмотр имеющихся веток:

$ git branch
  master
* new_f     здесь звездочка показывает, что мы находимся в ветке new_f

Просмотр последних коммитов в ветках:

$ git branch -v
  master d416887 My first commit from Notepad
* new_f  d416887 My first commit from Notepad

Видно, что коммит один и тотже, т.е ветки пока идентичны

Создаем новую ветку без перехода на нее:

$ git branch new_f2

Можем убедиться, что находимся попрежнему в ветке new_f:

$ git branch -v
  master d416887 My first commit from Notepad
* new_f  d416887 My first commit from Notepad
  new_f2 d416887 My first commit from Notepad

Пробуем перейти на другую ветку:

$ git checkout new_f2
Switched to branch 'new_f2'
M       FirstText.txt

Просмотрим, где находимся:

$ git branch -v
  master d416887 My first commit from Notepad
  new_f  d416887 My first commit from Notepad
* new_f2 d416887 My first commit from Notepad

Переключимся на главную(мастер) ветку:

$ git checkout master
Switched to branch 'master'
M       FirstText.txt

Добавим все:

$ git add .

Закомитим ветку мастер:

$ git commit -m"I commit all info to master branch"
[master 5a54280] I commit all info to master branch
 1 file changed, 58 insertions(+), 2 deletions(-)
 
Просмотрим все ветки:

$ git branch -v
* master 5a54280 I commit all info to master branch
  new_f  d416887 My first commit from Notepad
  new_f2 d416887 My first commit from Notepad




 



























































Это специальный коммит для ветки new_f

Я только что переключился на ветку new_f,   изменил и закомитил ее:

$ git checkout new_f

$ git add .

$ git commit -m"I commit some info in branch new_f"
[new_f 20f4536] I commit some info in branch new_f
 1 file changed, 56 insertions(+)
 
Настроим специальный тул для слияния:

$ git config --global merge.tool kdiff3

Это теперь в Юзерс/юзер/.gitignore :

[merge]
	tool = kdiff3
	
Из ветки new_f пробуем слияние(merge):

$ git merge master
Auto-merging FirstText.txt
Merge made by the 'recursive' strategy.
 FirstText.txt | 85 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 83 insertions(+), 2 deletions(-)

Переходим в ветку master:

$ git checkout master
Switched to branch 'master'

и пробуем слияние из мастера:

$ git merge new_f
Updating 842952e..01cd8b8
Fast-forward
 FirstText.txt | 56 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 56 insertions(+)

 вроде пока без конфликта

Спец инфо из ветки мастер
Спец инфо из ветки new_f
Спец инфо из ветки new_f номер 2
Спец 582

Насоздавали всяких пересекающихся строк в 2-х ветках и слияние не получается:

$ git merge master
error: Merging is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm <file>'
hint: as appropriate to mark resolution and make a commit.
fatal: Exiting because of an unresolved conflict.

Качаем и ставим: 

https://sourceforge.net/projects/kdiff3/files/

$ git config --global mergetool.kdiff3.cmd '"C:\\Program Files\\KDiff3\\kdiff3" $BASE $LOCAL $REMOTE -o $MERGED'
или прописываем в Юзерс/юзер/.gitignore:
[mergetool "kdiff3"]
	cmd = \"C:\\\\Program Files\\\\KDiff3\\\\kdiff3\" $BASE $LOCAL $REMOTE -o $MERGED
	
Пользуемся тулом:

$ git mergetool(откроется окно - нажать сверху стрелки навстречу, потом A, B или C или сочетание B+C; дискету; закрыть)
Merging:
FirstText.txt

Normal merge conflict for 'FirstText.txt':
  {local}: modified file
  {remote}: modified file
  
$ git status
On branch new_f
All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)

Changes to be committed:

        modified:   FirstText.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        FirstText.txt.orig

  
Затем коммитим:
 $ git add .
$ git commit -m"1"
[new_f 1e9c3c6] 1

$ git checkout master
Switched to branch 'master'

$ git merge new_f
Updating 88f4ce4..c06defe
Fast-forward
 FirstText.txt      |  61 ++++-
 FirstText.txt.orig | 654 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 714 insertions(+), 1 deletion(-)
 create mode 100644 FirstText.txt.orig
 
 $ git branch -v
* master c06defe Merge branch 'master' into new_f Try to do merge from new_f
  new_f  c06defe Merge branch 'master' into new_f Try to do merge from new_f
  new_f2 d416887 My first commit from Notepad

 
 Две ветки слились!

 Создадим репозиторий на гитхаб и отправим туда все из локального:
 
 $ git remote add origin https://github.com/eds832/project1.git
 
$ git push -u origin master (здесь будут запрошены логин и пароль от гита)
Counting objects: 77, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (75/75), done.
Writing objects: 100% (77/77), 15.77 KiB | 1.21 MiB/s, done.
Total 77 (delta 25), reused 0 (delta 0)
remote: Resolving deltas: 100% (25/25), done.
To https://github.com/eds832/project1.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

Теперь статус:

$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   FirstText.txt

no changes added to commit (use "git add" and/or "git commit -a")

Закомитим и посмотрим статус:

$ git add FirstText.txt

$ git commit -m"I commit FirstText.txt"
[master c459d53] I commit FirstText.txt
 1 file changed, 17 insertions(+)
 
 $ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

Пропушим этот коммит на гитхаб:

$ git push





























































Специальная информация в ветке new_f















 
 

